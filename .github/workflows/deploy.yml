# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CD - Deploy Application to GCP

on:
  push:
    branches: [ master ]
jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Set up yml file
        run: |
          echo "${{ secrets.APPLICATION_OAUTH_YML }}" >> src/main/resources/application-oauth.yml
          echo "${{ secrets.APPLICATION_PROD_YML }}" >> src/main/resources/application-prod.yml
      - name: Test with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: test
      - name: Build With Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: build
      - name: Prepare build file
        run: |
          mkdir upload
          cp script/deploy.sh upload/
          cp build/libs/*.jar upload/
      - name: Upload build file
        uses: actions/upload-artifact@v3
        with:
          name: build-file
          path: upload/
  deploy:
    needs: test_and_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Set up GCP env
        run: |
          echo "ZONE=${{secrets.GCP_ZONE}}" >> $GITHUB_ENV
          echo "${{secrets.GCP_SSH_KEY}}" > gcp_ssh_key
          echo "${{secrets.GCP_SSH_KEY_PUB}}" > gcp_ssh_key.pub
          chmod 600 gcp_ssh_key
          chmod 600 gcp_ssh_key.pub
      - name: Download build file
        uses: actions/download-artifact@v3
        with:
          name: build-file
          path: upload
      - name: Set build name
        run: |
          echo "BUILD_NAME=$(date '+%Y-%m-%d-%s')_$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
      - name: Set build dir
        run: |
          echo "BUILD_DIR=~/app/build/$BUILD_NAME" >> $GITHUB_ENV
      - name: Copy build file to GCP
        run: |
          MKDIR_COMMAND="mkdir -p ~/app/build/$BUILD_NAME"
          echo "mkdir command = $MKDIR_COMMAND"
          echo "build file path = $BUILD_DIR/$BUILD_NAME"
          gcloud compute ssh --zone $ZONE --ssh-key-file gcp_ssh_key ka@genshin --command "$MKDIR_COMMAND"
          gcloud compute scp --zone $ZONE --ssh-key-file gcp_ssh_key upload/*.jar ka@genshin:$BUILD_DIR/$BUILD_NAME.jar
          gcloud compute scp --zone $ZONE --ssh-key-file gcp_ssh_key upload/deploy.sh ka@genshin:$BUILD_DIR/deploy.sh
          gcloud compute ssh --zone $ZONE --ssh-key-file gcp_ssh_key ka@genshin --command "chmod +x $BUILD_DIR/deploy.sh"
      - name: Deploy build file to GCP
        run: |
          gcloud compute ssh --zone $ZONE --ssh-key-file gcp_ssh_key ka@genshin --command "bash $BUILD_DIR/deploy.sh"
